#!/bin/bash

echo "🚀 ATS Resume Checker - Deployment Script"
echo "=========================================="

echo ""
echo "📋 Prerequisites:"
echo "1. GitHub repository with your code"
echo "2. Render account (render.com)"
echo "3. Vercel account (vercel.com)"
echo ""

echo "🔧 Step 1: Backend Deployment (Render)"
echo "----------------------------------------"
echo "1. Go to render.com and sign up"
echo "2. Click 'New +' → 'Web Service'"
echo "3. Connect your GitHub repo"
echo "4. Configure:"
echo "   - Name: ats-checker-backend"
echo "   - Environment: Python 3"
echo "   - Build Command: pip install -r requirements.txt"
echo "   - Start Command: uvicorn main:app --host 0.0.0.0 --port \$PORT"
echo "   - Plan: Free"
echo "5. Click 'Create Web Service'"
echo "6. Wait for deployment and copy the URL"
echo ""

echo "🌐 Step 2: Frontend Deployment (Vercel)"
echo "----------------------------------------"
echo "1. Go to vercel.com and sign up"
echo "2. Click 'New Project'"
echo "3. Import your GitHub repo"
echo "4. Configure:"
echo "   - Framework: Next.js"
echo "   - Root Directory: web"
echo "   - Build Command: npm run build"
echo "5. Add Environment Variable:"
echo "   - Key: NEXT_PUBLIC_API_URL"
echo "   - Value: [Your Render backend URL]"
echo "6. Click 'Deploy'"
echo ""

echo "🔗 Step 3: Update Backend CORS"
echo "--------------------------------"
echo "1. In your backend code, update CORS origins:"
echo "   - Add your Vercel frontend URL"
echo "2. Push changes to GitHub"
echo "3. Render will auto-deploy"
echo ""

echo "✅ Step 4: Test Your Deployment"
echo "--------------------------------"
echo "1. Test backend: curl [your-backend-url]/health"
echo "2. Test frontend: Open your Vercel URL"
echo "3. Upload a test file and check if it works"
echo ""

echo "🎉 Your ATS Resume Checker will be live at:"
echo "- Backend: https://ats-checker-backend.onrender.com"
echo "- Frontend: https://ats-checker-frontend.vercel.app"
echo ""

echo "📚 For detailed instructions, see DEPLOYMENT.md"
echo ""

echo "🚀 Ready to deploy? Let's go!"
